plugins {
	id "io.toolebox.git-versioner" version "1.3.0"
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.1"
	id 'java-library'
	id 'jacoco'
}

group = 'abwilkinson'
sourceCompatibility = '11'
configurations { codacy }
repositories {
	mavenCentral()
	jcenter()
}
java {
	withSourcesJar()
}
dependencies {
	codacy 'com.codacy:codacy-coverage-reporter:latest.release'

	api 'org.springframework.boot:spring-boot-starter'
	api 'org.springframework.boot:spring-boot-starter-web'

	api 'net.dv8tion:JDA:4.BETA.0_1'

	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
	useJUnitPlatform()
}
versioner {
	pattern {
		pattern = "%M.%m.%p"
	}
}

publishing {
	publications {
		BintrayRelease(MavenPublication) {
			from components.java
			artifactId archivesBaseName
			groupId = project.group as String
			version = project.version as String
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
	setPublications("BintrayRelease")
	pkg {
		version {
			name = project.version as String
			released  = new Date()
		}
		repo = 'maven'
		name = 'discord-spring-starter'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/abWilkinson/discord-spring-starter.git'
		publish = true
		override = true
	}
}
jar {
	enabled = true
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
	main = "com.codacy.CodacyCoverageReporter"
	classpath = configurations.codacy
	args = [
			"report",
			"-l",
			"Java",
			"-r",
			"${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	]
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}